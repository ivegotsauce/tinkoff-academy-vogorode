buildscript {
	ext {
		protobufVersion = '3.22.0'
		protobufPluginVersion = '0.9.2'
		grpcVersion = '1.53.0'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.google.protobuf' version "${protobufPluginVersion}"
}

group = 'ru.academy.tinkoff'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

springBoot {
	buildInfo()
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
	implementation 'net.devh:grpc-client-spring-boot-starter:2.14.0.RELEASE'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'io.micrometer:micrometer-core'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.liquibase:liquibase-core:4.19.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate:hibernate-spatial'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation("org.mockito:mockito-core:5.1.1")
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}
